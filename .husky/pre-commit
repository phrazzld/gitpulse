#!/bin/sh

# Run lint and typecheck
npm run lint && npm run typecheck

# File length check
echo "Checking file lengths..."
warning_length=500
error_length=1000

# Create a temporary file to track errors
error_file=$(mktemp)
echo "0" > "$error_file"

# Check ALL TypeScript/JavaScript files, not just staged ones
echo "Checking existing files..."
find src -type f \( -name "*.ts" -o -name "*.tsx" -o -name "*.js" -o -name "*.jsx" \) | while read file; do
  if [ -f "$file" ]; then
    line_count=$(wc -l < "$file")
    
    if [ "$line_count" -gt "$error_length" ]; then
      echo "ERROR: $file has $line_count lines (exceeds limit of $error_length)"
      echo "1" > "$error_file"
    elif [ "$line_count" -gt "$warning_length" ]; then
      echo "WARNING: $file has $line_count lines (exceeds recommended limit of $warning_length)"
    fi
  fi
done

# Check staged files
echo "Checking staged files..."
git diff --cached --name-only --diff-filter=ACMRT | grep -E '\.(ts|tsx|js|jsx)$' | while read file; do
  if [ -f "$file" ]; then
    line_count=$(wc -l < "$file")
    
    if [ "$line_count" -gt "$error_length" ]; then
      echo "ERROR: $file has $line_count lines (exceeds limit of $error_length)"
      echo "1" > "$error_file"
    elif [ "$line_count" -gt "$warning_length" ]; then
      echo "WARNING: $file has $line_count lines (exceeds recommended limit of $warning_length)"
    fi
  fi
done

# Check if any errors were found
has_error=$(cat "$error_file")
rm "$error_file"

if [ "$has_error" -eq 1 ]; then
  echo "Files exceeding the maximum length of $error_length lines were found. Please refactor them."
  exit 1
fi